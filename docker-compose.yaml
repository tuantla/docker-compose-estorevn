version: '3'
services:
  api-server:
   image: docker.io/indexing/estore-service:20190401-1304
   hostname: api
   domainname: prod.java
   environment:
   - ENV=prod
   networks:
    estore:
      aliases:
      - api.prod.java
  memcached:
    hostname: memcached
    domainname: prod.java
    image: "docker.io/memcached:alpine"
    networks:
      estore:
        aliases:
          - memcached.prod.java
  solr:
    hostname: solr
    domainname: prod.java
    image: "docker.io/indexing/solr:e5b6368-dirty"
    networks:
      estore:
        aliases:
          - solr.prod.java
    volumes:
    - ./data/solr-data:/var/lib/solr/data
  qpid:
    hostname: qpid
    domainname: prod.java
    image: "docker.io/indexing/qpid"
    networks:
      estore:
        aliases:
          - qpid.prod.java
  db:
    hostname: db
    domainname: prod.java
    image: "docker.io/mysql:5.7"
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    environment:
     - MYSQL_ALLOW_EMPTY_PASSWORD=true
    volumes:
      - ./data/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./data/mysql:/var/lib/mysql
    networks:
      estore:
        aliases:
          - db.prod.java
  web-server:
   image: docker.io/indexing/estore-webapp:20190401-1304
   hostname: web
   domainname: prod.java
   environment:
   - ENV=prod
   networks:
    estore:
      aliases:
      - web.prod.java
  lb:
    hostname: lb
    domainname: prod.java
    image: "haproxy:1.9-alpine"
    command: ['haproxy', '-f', '/lb/haproxy.cfg']
    volumes:
      - ./data/lb:/lb
      - ./data/ssl:/ssl
    networks:
      estore:
        aliases:
          - lb.prod.java
networks:
 estore:
  driver: bridge

